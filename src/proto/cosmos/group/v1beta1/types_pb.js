// source: cosmos/group/v1beta1/types.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var cosmos_proto_cosmos_pb = require('../../../cosmos_proto/cosmos_pb.js');
goog.object.extend(proto, cosmos_proto_cosmos_pb);
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
goog.exportSymbol('proto.cosmos.group.v1beta1.Choice', null, global);
goog.exportSymbol('proto.cosmos.group.v1beta1.GroupAccountInfo', null, global);
goog.exportSymbol('proto.cosmos.group.v1beta1.GroupInfo', null, global);
goog.exportSymbol('proto.cosmos.group.v1beta1.GroupMember', null, global);
goog.exportSymbol('proto.cosmos.group.v1beta1.Member', null, global);
goog.exportSymbol('proto.cosmos.group.v1beta1.Members', null, global);
goog.exportSymbol('proto.cosmos.group.v1beta1.Proposal', null, global);
goog.exportSymbol('proto.cosmos.group.v1beta1.Proposal.ExecutorResult', null, global);
goog.exportSymbol('proto.cosmos.group.v1beta1.Proposal.Result', null, global);
goog.exportSymbol('proto.cosmos.group.v1beta1.Proposal.Status', null, global);
goog.exportSymbol('proto.cosmos.group.v1beta1.Tally', null, global);
goog.exportSymbol('proto.cosmos.group.v1beta1.ThresholdDecisionPolicy', null, global);
goog.exportSymbol('proto.cosmos.group.v1beta1.Vote', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.group.v1beta1.Member = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.group.v1beta1.Member, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.group.v1beta1.Member.displayName = 'proto.cosmos.group.v1beta1.Member';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.group.v1beta1.Members = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cosmos.group.v1beta1.Members.repeatedFields_, null);
};
goog.inherits(proto.cosmos.group.v1beta1.Members, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.group.v1beta1.Members.displayName = 'proto.cosmos.group.v1beta1.Members';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.group.v1beta1.ThresholdDecisionPolicy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.group.v1beta1.ThresholdDecisionPolicy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.group.v1beta1.ThresholdDecisionPolicy.displayName = 'proto.cosmos.group.v1beta1.ThresholdDecisionPolicy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.group.v1beta1.GroupInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.group.v1beta1.GroupInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.group.v1beta1.GroupInfo.displayName = 'proto.cosmos.group.v1beta1.GroupInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.group.v1beta1.GroupMember = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.group.v1beta1.GroupMember, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.group.v1beta1.GroupMember.displayName = 'proto.cosmos.group.v1beta1.GroupMember';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.group.v1beta1.GroupAccountInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.group.v1beta1.GroupAccountInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.group.v1beta1.GroupAccountInfo.displayName = 'proto.cosmos.group.v1beta1.GroupAccountInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.group.v1beta1.Proposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cosmos.group.v1beta1.Proposal.repeatedFields_, null);
};
goog.inherits(proto.cosmos.group.v1beta1.Proposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.group.v1beta1.Proposal.displayName = 'proto.cosmos.group.v1beta1.Proposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.group.v1beta1.Tally = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.group.v1beta1.Tally, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.group.v1beta1.Tally.displayName = 'proto.cosmos.group.v1beta1.Tally';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.group.v1beta1.Vote = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.group.v1beta1.Vote, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.group.v1beta1.Vote.displayName = 'proto.cosmos.group.v1beta1.Vote';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.group.v1beta1.Member.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.group.v1beta1.Member.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.group.v1beta1.Member} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.group.v1beta1.Member.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    weight: jspb.Message.getFieldWithDefault(msg, 2, ""),
    metadata: msg.getMetadata_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.group.v1beta1.Member}
 */
proto.cosmos.group.v1beta1.Member.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.group.v1beta1.Member;
  return proto.cosmos.group.v1beta1.Member.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.group.v1beta1.Member} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.group.v1beta1.Member}
 */
proto.cosmos.group.v1beta1.Member.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWeight(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.group.v1beta1.Member.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.group.v1beta1.Member.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.group.v1beta1.Member} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.group.v1beta1.Member.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWeight();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMetadata_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.cosmos.group.v1beta1.Member.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.group.v1beta1.Member} returns this
 */
proto.cosmos.group.v1beta1.Member.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string weight = 2;
 * @return {string}
 */
proto.cosmos.group.v1beta1.Member.prototype.getWeight = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.group.v1beta1.Member} returns this
 */
proto.cosmos.group.v1beta1.Member.prototype.setWeight = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes metadata = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cosmos.group.v1beta1.Member.prototype.getMetadata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes metadata = 3;
 * This is a type-conversion wrapper around `getMetadata()`
 * @return {string}
 */
proto.cosmos.group.v1beta1.Member.prototype.getMetadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMetadata()));
};


/**
 * optional bytes metadata = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMetadata()`
 * @return {!Uint8Array}
 */
proto.cosmos.group.v1beta1.Member.prototype.getMetadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMetadata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cosmos.group.v1beta1.Member} returns this
 */
proto.cosmos.group.v1beta1.Member.prototype.setMetadata = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cosmos.group.v1beta1.Members.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.group.v1beta1.Members.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.group.v1beta1.Members.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.group.v1beta1.Members} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.group.v1beta1.Members.toObject = function(includeInstance, msg) {
  var f, obj = {
    membersList: jspb.Message.toObjectList(msg.getMembersList(),
    proto.cosmos.group.v1beta1.Member.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.group.v1beta1.Members}
 */
proto.cosmos.group.v1beta1.Members.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.group.v1beta1.Members;
  return proto.cosmos.group.v1beta1.Members.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.group.v1beta1.Members} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.group.v1beta1.Members}
 */
proto.cosmos.group.v1beta1.Members.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cosmos.group.v1beta1.Member;
      reader.readMessage(value,proto.cosmos.group.v1beta1.Member.deserializeBinaryFromReader);
      msg.addMembers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.group.v1beta1.Members.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.group.v1beta1.Members.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.group.v1beta1.Members} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.group.v1beta1.Members.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMembersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cosmos.group.v1beta1.Member.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Member members = 1;
 * @return {!Array<!proto.cosmos.group.v1beta1.Member>}
 */
proto.cosmos.group.v1beta1.Members.prototype.getMembersList = function() {
  return /** @type{!Array<!proto.cosmos.group.v1beta1.Member>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cosmos.group.v1beta1.Member, 1));
};


/**
 * @param {!Array<!proto.cosmos.group.v1beta1.Member>} value
 * @return {!proto.cosmos.group.v1beta1.Members} returns this
*/
proto.cosmos.group.v1beta1.Members.prototype.setMembersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cosmos.group.v1beta1.Member=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.group.v1beta1.Member}
 */
proto.cosmos.group.v1beta1.Members.prototype.addMembers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cosmos.group.v1beta1.Member, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cosmos.group.v1beta1.Members} returns this
 */
proto.cosmos.group.v1beta1.Members.prototype.clearMembersList = function() {
  return this.setMembersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.group.v1beta1.ThresholdDecisionPolicy.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.group.v1beta1.ThresholdDecisionPolicy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.group.v1beta1.ThresholdDecisionPolicy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.group.v1beta1.ThresholdDecisionPolicy.toObject = function(includeInstance, msg) {
  var f, obj = {
    threshold: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timeout: (f = msg.getTimeout()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.group.v1beta1.ThresholdDecisionPolicy}
 */
proto.cosmos.group.v1beta1.ThresholdDecisionPolicy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.group.v1beta1.ThresholdDecisionPolicy;
  return proto.cosmos.group.v1beta1.ThresholdDecisionPolicy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.group.v1beta1.ThresholdDecisionPolicy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.group.v1beta1.ThresholdDecisionPolicy}
 */
proto.cosmos.group.v1beta1.ThresholdDecisionPolicy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setThreshold(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setTimeout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.group.v1beta1.ThresholdDecisionPolicy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.group.v1beta1.ThresholdDecisionPolicy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.group.v1beta1.ThresholdDecisionPolicy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.group.v1beta1.ThresholdDecisionPolicy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThreshold();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimeout();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional string threshold = 1;
 * @return {string}
 */
proto.cosmos.group.v1beta1.ThresholdDecisionPolicy.prototype.getThreshold = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.group.v1beta1.ThresholdDecisionPolicy} returns this
 */
proto.cosmos.group.v1beta1.ThresholdDecisionPolicy.prototype.setThreshold = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Duration timeout = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.cosmos.group.v1beta1.ThresholdDecisionPolicy.prototype.getTimeout = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.cosmos.group.v1beta1.ThresholdDecisionPolicy} returns this
*/
proto.cosmos.group.v1beta1.ThresholdDecisionPolicy.prototype.setTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cosmos.group.v1beta1.ThresholdDecisionPolicy} returns this
 */
proto.cosmos.group.v1beta1.ThresholdDecisionPolicy.prototype.clearTimeout = function() {
  return this.setTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cosmos.group.v1beta1.ThresholdDecisionPolicy.prototype.hasTimeout = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.group.v1beta1.GroupInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.group.v1beta1.GroupInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.group.v1beta1.GroupInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.group.v1beta1.GroupInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    admin: jspb.Message.getFieldWithDefault(msg, 2, ""),
    metadata: msg.getMetadata_asB64(),
    version: jspb.Message.getFieldWithDefault(msg, 4, 0),
    totalWeight: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.group.v1beta1.GroupInfo}
 */
proto.cosmos.group.v1beta1.GroupInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.group.v1beta1.GroupInfo;
  return proto.cosmos.group.v1beta1.GroupInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.group.v1beta1.GroupInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.group.v1beta1.GroupInfo}
 */
proto.cosmos.group.v1beta1.GroupInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdmin(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMetadata(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setVersion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalWeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.group.v1beta1.GroupInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.group.v1beta1.GroupInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.group.v1beta1.GroupInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.group.v1beta1.GroupInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAdmin();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMetadata_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getTotalWeight();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional uint64 group_id = 1;
 * @return {number}
 */
proto.cosmos.group.v1beta1.GroupInfo.prototype.getGroupId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cosmos.group.v1beta1.GroupInfo} returns this
 */
proto.cosmos.group.v1beta1.GroupInfo.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string admin = 2;
 * @return {string}
 */
proto.cosmos.group.v1beta1.GroupInfo.prototype.getAdmin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.group.v1beta1.GroupInfo} returns this
 */
proto.cosmos.group.v1beta1.GroupInfo.prototype.setAdmin = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes metadata = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cosmos.group.v1beta1.GroupInfo.prototype.getMetadata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes metadata = 3;
 * This is a type-conversion wrapper around `getMetadata()`
 * @return {string}
 */
proto.cosmos.group.v1beta1.GroupInfo.prototype.getMetadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMetadata()));
};


/**
 * optional bytes metadata = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMetadata()`
 * @return {!Uint8Array}
 */
proto.cosmos.group.v1beta1.GroupInfo.prototype.getMetadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMetadata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cosmos.group.v1beta1.GroupInfo} returns this
 */
proto.cosmos.group.v1beta1.GroupInfo.prototype.setMetadata = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional uint64 version = 4;
 * @return {number}
 */
proto.cosmos.group.v1beta1.GroupInfo.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.cosmos.group.v1beta1.GroupInfo} returns this
 */
proto.cosmos.group.v1beta1.GroupInfo.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string total_weight = 5;
 * @return {string}
 */
proto.cosmos.group.v1beta1.GroupInfo.prototype.getTotalWeight = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.group.v1beta1.GroupInfo} returns this
 */
proto.cosmos.group.v1beta1.GroupInfo.prototype.setTotalWeight = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.group.v1beta1.GroupMember.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.group.v1beta1.GroupMember.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.group.v1beta1.GroupMember} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.group.v1beta1.GroupMember.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    member: (f = msg.getMember()) && proto.cosmos.group.v1beta1.Member.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.group.v1beta1.GroupMember}
 */
proto.cosmos.group.v1beta1.GroupMember.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.group.v1beta1.GroupMember;
  return proto.cosmos.group.v1beta1.GroupMember.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.group.v1beta1.GroupMember} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.group.v1beta1.GroupMember}
 */
proto.cosmos.group.v1beta1.GroupMember.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupId(value);
      break;
    case 2:
      var value = new proto.cosmos.group.v1beta1.Member;
      reader.readMessage(value,proto.cosmos.group.v1beta1.Member.deserializeBinaryFromReader);
      msg.setMember(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.group.v1beta1.GroupMember.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.group.v1beta1.GroupMember.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.group.v1beta1.GroupMember} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.group.v1beta1.GroupMember.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getMember();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cosmos.group.v1beta1.Member.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 group_id = 1;
 * @return {number}
 */
proto.cosmos.group.v1beta1.GroupMember.prototype.getGroupId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cosmos.group.v1beta1.GroupMember} returns this
 */
proto.cosmos.group.v1beta1.GroupMember.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Member member = 2;
 * @return {?proto.cosmos.group.v1beta1.Member}
 */
proto.cosmos.group.v1beta1.GroupMember.prototype.getMember = function() {
  return /** @type{?proto.cosmos.group.v1beta1.Member} */ (
    jspb.Message.getWrapperField(this, proto.cosmos.group.v1beta1.Member, 2));
};


/**
 * @param {?proto.cosmos.group.v1beta1.Member|undefined} value
 * @return {!proto.cosmos.group.v1beta1.GroupMember} returns this
*/
proto.cosmos.group.v1beta1.GroupMember.prototype.setMember = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cosmos.group.v1beta1.GroupMember} returns this
 */
proto.cosmos.group.v1beta1.GroupMember.prototype.clearMember = function() {
  return this.setMember(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cosmos.group.v1beta1.GroupMember.prototype.hasMember = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.group.v1beta1.GroupAccountInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.group.v1beta1.GroupAccountInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    groupId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    admin: jspb.Message.getFieldWithDefault(msg, 3, ""),
    metadata: msg.getMetadata_asB64(),
    version: jspb.Message.getFieldWithDefault(msg, 5, 0),
    decisionPolicy: (f = msg.getDecisionPolicy()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    derivationKey: msg.getDerivationKey_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.group.v1beta1.GroupAccountInfo}
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.group.v1beta1.GroupAccountInfo;
  return proto.cosmos.group.v1beta1.GroupAccountInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.group.v1beta1.GroupAccountInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.group.v1beta1.GroupAccountInfo}
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdmin(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMetadata(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setVersion(value);
      break;
    case 6:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setDecisionPolicy(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDerivationKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.group.v1beta1.GroupAccountInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.group.v1beta1.GroupAccountInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGroupId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAdmin();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMetadata_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getDecisionPolicy();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getDerivationKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.group.v1beta1.GroupAccountInfo} returns this
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 group_id = 2;
 * @return {number}
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.prototype.getGroupId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cosmos.group.v1beta1.GroupAccountInfo} returns this
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string admin = 3;
 * @return {string}
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.prototype.getAdmin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.group.v1beta1.GroupAccountInfo} returns this
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.prototype.setAdmin = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bytes metadata = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.prototype.getMetadata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes metadata = 4;
 * This is a type-conversion wrapper around `getMetadata()`
 * @return {string}
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.prototype.getMetadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMetadata()));
};


/**
 * optional bytes metadata = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMetadata()`
 * @return {!Uint8Array}
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.prototype.getMetadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMetadata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cosmos.group.v1beta1.GroupAccountInfo} returns this
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.prototype.setMetadata = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional uint64 version = 5;
 * @return {number}
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.cosmos.group.v1beta1.GroupAccountInfo} returns this
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional google.protobuf.Any decision_policy = 6;
 * @return {?proto.google.protobuf.Any}
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.prototype.getDecisionPolicy = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 6));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.cosmos.group.v1beta1.GroupAccountInfo} returns this
*/
proto.cosmos.group.v1beta1.GroupAccountInfo.prototype.setDecisionPolicy = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cosmos.group.v1beta1.GroupAccountInfo} returns this
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.prototype.clearDecisionPolicy = function() {
  return this.setDecisionPolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.prototype.hasDecisionPolicy = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bytes derivation_key = 7;
 * @return {!(string|Uint8Array)}
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.prototype.getDerivationKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes derivation_key = 7;
 * This is a type-conversion wrapper around `getDerivationKey()`
 * @return {string}
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.prototype.getDerivationKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDerivationKey()));
};


/**
 * optional bytes derivation_key = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDerivationKey()`
 * @return {!Uint8Array}
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.prototype.getDerivationKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDerivationKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cosmos.group.v1beta1.GroupAccountInfo} returns this
 */
proto.cosmos.group.v1beta1.GroupAccountInfo.prototype.setDerivationKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cosmos.group.v1beta1.Proposal.repeatedFields_ = [4,13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.group.v1beta1.Proposal.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.group.v1beta1.Proposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.group.v1beta1.Proposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.group.v1beta1.Proposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    proposalId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    address: jspb.Message.getFieldWithDefault(msg, 2, ""),
    metadata: msg.getMetadata_asB64(),
    proposersList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    submittedAt: (f = msg.getSubmittedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    groupVersion: jspb.Message.getFieldWithDefault(msg, 6, 0),
    groupAccountVersion: jspb.Message.getFieldWithDefault(msg, 7, 0),
    status: jspb.Message.getFieldWithDefault(msg, 8, 0),
    result: jspb.Message.getFieldWithDefault(msg, 9, 0),
    voteState: (f = msg.getVoteState()) && proto.cosmos.group.v1beta1.Tally.toObject(includeInstance, f),
    timeout: (f = msg.getTimeout()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    executorResult: jspb.Message.getFieldWithDefault(msg, 12, 0),
    msgsList: jspb.Message.toObjectList(msg.getMsgsList(),
    google_protobuf_any_pb.Any.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.group.v1beta1.Proposal}
 */
proto.cosmos.group.v1beta1.Proposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.group.v1beta1.Proposal;
  return proto.cosmos.group.v1beta1.Proposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.group.v1beta1.Proposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.group.v1beta1.Proposal}
 */
proto.cosmos.group.v1beta1.Proposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setProposalId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMetadata(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addProposers(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSubmittedAt(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupVersion(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGroupAccountVersion(value);
      break;
    case 8:
      var value = /** @type {!proto.cosmos.group.v1beta1.Proposal.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 9:
      var value = /** @type {!proto.cosmos.group.v1beta1.Proposal.Result} */ (reader.readEnum());
      msg.setResult(value);
      break;
    case 10:
      var value = new proto.cosmos.group.v1beta1.Tally;
      reader.readMessage(value,proto.cosmos.group.v1beta1.Tally.deserializeBinaryFromReader);
      msg.setVoteState(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimeout(value);
      break;
    case 12:
      var value = /** @type {!proto.cosmos.group.v1beta1.Proposal.ExecutorResult} */ (reader.readEnum());
      msg.setExecutorResult(value);
      break;
    case 13:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.addMsgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.group.v1beta1.Proposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.group.v1beta1.Proposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.group.v1beta1.Proposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.group.v1beta1.Proposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProposalId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMetadata_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getProposersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getSubmittedAt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getGroupVersion();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getGroupAccountVersion();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getResult();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getVoteState();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.cosmos.group.v1beta1.Tally.serializeBinaryToWriter
    );
  }
  f = message.getTimeout();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getExecutorResult();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getMsgsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.cosmos.group.v1beta1.Proposal.Status = {
  STATUS_UNSPECIFIED: 0,
  STATUS_SUBMITTED: 1,
  STATUS_CLOSED: 2,
  STATUS_ABORTED: 3
};

/**
 * @enum {number}
 */
proto.cosmos.group.v1beta1.Proposal.Result = {
  RESULT_UNSPECIFIED: 0,
  RESULT_UNFINALIZED: 1,
  RESULT_ACCEPTED: 2,
  RESULT_REJECTED: 3
};

/**
 * @enum {number}
 */
proto.cosmos.group.v1beta1.Proposal.ExecutorResult = {
  EXECUTOR_RESULT_UNSPECIFIED: 0,
  EXECUTOR_RESULT_NOT_RUN: 1,
  EXECUTOR_RESULT_SUCCESS: 2,
  EXECUTOR_RESULT_FAILURE: 3
};

/**
 * optional uint64 proposal_id = 1;
 * @return {number}
 */
proto.cosmos.group.v1beta1.Proposal.prototype.getProposalId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cosmos.group.v1beta1.Proposal} returns this
 */
proto.cosmos.group.v1beta1.Proposal.prototype.setProposalId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.cosmos.group.v1beta1.Proposal.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.group.v1beta1.Proposal} returns this
 */
proto.cosmos.group.v1beta1.Proposal.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes metadata = 3;
 * @return {!(string|Uint8Array)}
 */
proto.cosmos.group.v1beta1.Proposal.prototype.getMetadata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes metadata = 3;
 * This is a type-conversion wrapper around `getMetadata()`
 * @return {string}
 */
proto.cosmos.group.v1beta1.Proposal.prototype.getMetadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMetadata()));
};


/**
 * optional bytes metadata = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMetadata()`
 * @return {!Uint8Array}
 */
proto.cosmos.group.v1beta1.Proposal.prototype.getMetadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMetadata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cosmos.group.v1beta1.Proposal} returns this
 */
proto.cosmos.group.v1beta1.Proposal.prototype.setMetadata = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * repeated string proposers = 4;
 * @return {!Array<string>}
 */
proto.cosmos.group.v1beta1.Proposal.prototype.getProposersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cosmos.group.v1beta1.Proposal} returns this
 */
proto.cosmos.group.v1beta1.Proposal.prototype.setProposersList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cosmos.group.v1beta1.Proposal} returns this
 */
proto.cosmos.group.v1beta1.Proposal.prototype.addProposers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cosmos.group.v1beta1.Proposal} returns this
 */
proto.cosmos.group.v1beta1.Proposal.prototype.clearProposersList = function() {
  return this.setProposersList([]);
};


/**
 * optional google.protobuf.Timestamp submitted_at = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.cosmos.group.v1beta1.Proposal.prototype.getSubmittedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.cosmos.group.v1beta1.Proposal} returns this
*/
proto.cosmos.group.v1beta1.Proposal.prototype.setSubmittedAt = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cosmos.group.v1beta1.Proposal} returns this
 */
proto.cosmos.group.v1beta1.Proposal.prototype.clearSubmittedAt = function() {
  return this.setSubmittedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cosmos.group.v1beta1.Proposal.prototype.hasSubmittedAt = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint64 group_version = 6;
 * @return {number}
 */
proto.cosmos.group.v1beta1.Proposal.prototype.getGroupVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.cosmos.group.v1beta1.Proposal} returns this
 */
proto.cosmos.group.v1beta1.Proposal.prototype.setGroupVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 group_account_version = 7;
 * @return {number}
 */
proto.cosmos.group.v1beta1.Proposal.prototype.getGroupAccountVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.cosmos.group.v1beta1.Proposal} returns this
 */
proto.cosmos.group.v1beta1.Proposal.prototype.setGroupAccountVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional Status status = 8;
 * @return {!proto.cosmos.group.v1beta1.Proposal.Status}
 */
proto.cosmos.group.v1beta1.Proposal.prototype.getStatus = function() {
  return /** @type {!proto.cosmos.group.v1beta1.Proposal.Status} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.cosmos.group.v1beta1.Proposal.Status} value
 * @return {!proto.cosmos.group.v1beta1.Proposal} returns this
 */
proto.cosmos.group.v1beta1.Proposal.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional Result result = 9;
 * @return {!proto.cosmos.group.v1beta1.Proposal.Result}
 */
proto.cosmos.group.v1beta1.Proposal.prototype.getResult = function() {
  return /** @type {!proto.cosmos.group.v1beta1.Proposal.Result} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.cosmos.group.v1beta1.Proposal.Result} value
 * @return {!proto.cosmos.group.v1beta1.Proposal} returns this
 */
proto.cosmos.group.v1beta1.Proposal.prototype.setResult = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional Tally vote_state = 10;
 * @return {?proto.cosmos.group.v1beta1.Tally}
 */
proto.cosmos.group.v1beta1.Proposal.prototype.getVoteState = function() {
  return /** @type{?proto.cosmos.group.v1beta1.Tally} */ (
    jspb.Message.getWrapperField(this, proto.cosmos.group.v1beta1.Tally, 10));
};


/**
 * @param {?proto.cosmos.group.v1beta1.Tally|undefined} value
 * @return {!proto.cosmos.group.v1beta1.Proposal} returns this
*/
proto.cosmos.group.v1beta1.Proposal.prototype.setVoteState = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cosmos.group.v1beta1.Proposal} returns this
 */
proto.cosmos.group.v1beta1.Proposal.prototype.clearVoteState = function() {
  return this.setVoteState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cosmos.group.v1beta1.Proposal.prototype.hasVoteState = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Timestamp timeout = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.cosmos.group.v1beta1.Proposal.prototype.getTimeout = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.cosmos.group.v1beta1.Proposal} returns this
*/
proto.cosmos.group.v1beta1.Proposal.prototype.setTimeout = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cosmos.group.v1beta1.Proposal} returns this
 */
proto.cosmos.group.v1beta1.Proposal.prototype.clearTimeout = function() {
  return this.setTimeout(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cosmos.group.v1beta1.Proposal.prototype.hasTimeout = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ExecutorResult executor_result = 12;
 * @return {!proto.cosmos.group.v1beta1.Proposal.ExecutorResult}
 */
proto.cosmos.group.v1beta1.Proposal.prototype.getExecutorResult = function() {
  return /** @type {!proto.cosmos.group.v1beta1.Proposal.ExecutorResult} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.cosmos.group.v1beta1.Proposal.ExecutorResult} value
 * @return {!proto.cosmos.group.v1beta1.Proposal} returns this
 */
proto.cosmos.group.v1beta1.Proposal.prototype.setExecutorResult = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * repeated google.protobuf.Any msgs = 13;
 * @return {!Array<!proto.google.protobuf.Any>}
 */
proto.cosmos.group.v1beta1.Proposal.prototype.getMsgsList = function() {
  return /** @type{!Array<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_any_pb.Any, 13));
};


/**
 * @param {!Array<!proto.google.protobuf.Any>} value
 * @return {!proto.cosmos.group.v1beta1.Proposal} returns this
*/
proto.cosmos.group.v1beta1.Proposal.prototype.setMsgsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.cosmos.group.v1beta1.Proposal.prototype.addMsgs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.google.protobuf.Any, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cosmos.group.v1beta1.Proposal} returns this
 */
proto.cosmos.group.v1beta1.Proposal.prototype.clearMsgsList = function() {
  return this.setMsgsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.group.v1beta1.Tally.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.group.v1beta1.Tally.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.group.v1beta1.Tally} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.group.v1beta1.Tally.toObject = function(includeInstance, msg) {
  var f, obj = {
    yesCount: jspb.Message.getFieldWithDefault(msg, 1, ""),
    noCount: jspb.Message.getFieldWithDefault(msg, 2, ""),
    abstainCount: jspb.Message.getFieldWithDefault(msg, 3, ""),
    vetoCount: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.group.v1beta1.Tally}
 */
proto.cosmos.group.v1beta1.Tally.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.group.v1beta1.Tally;
  return proto.cosmos.group.v1beta1.Tally.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.group.v1beta1.Tally} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.group.v1beta1.Tally}
 */
proto.cosmos.group.v1beta1.Tally.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setYesCount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNoCount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAbstainCount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVetoCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.group.v1beta1.Tally.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.group.v1beta1.Tally.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.group.v1beta1.Tally} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.group.v1beta1.Tally.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getYesCount();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNoCount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAbstainCount();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getVetoCount();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string yes_count = 1;
 * @return {string}
 */
proto.cosmos.group.v1beta1.Tally.prototype.getYesCount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.group.v1beta1.Tally} returns this
 */
proto.cosmos.group.v1beta1.Tally.prototype.setYesCount = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string no_count = 2;
 * @return {string}
 */
proto.cosmos.group.v1beta1.Tally.prototype.getNoCount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.group.v1beta1.Tally} returns this
 */
proto.cosmos.group.v1beta1.Tally.prototype.setNoCount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string abstain_count = 3;
 * @return {string}
 */
proto.cosmos.group.v1beta1.Tally.prototype.getAbstainCount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.group.v1beta1.Tally} returns this
 */
proto.cosmos.group.v1beta1.Tally.prototype.setAbstainCount = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string veto_count = 4;
 * @return {string}
 */
proto.cosmos.group.v1beta1.Tally.prototype.getVetoCount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.group.v1beta1.Tally} returns this
 */
proto.cosmos.group.v1beta1.Tally.prototype.setVetoCount = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.group.v1beta1.Vote.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.group.v1beta1.Vote.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.group.v1beta1.Vote} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.group.v1beta1.Vote.toObject = function(includeInstance, msg) {
  var f, obj = {
    proposalId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    voter: jspb.Message.getFieldWithDefault(msg, 2, ""),
    choice: jspb.Message.getFieldWithDefault(msg, 3, 0),
    metadata: msg.getMetadata_asB64(),
    submittedAt: (f = msg.getSubmittedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.group.v1beta1.Vote}
 */
proto.cosmos.group.v1beta1.Vote.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cosmos.group.v1beta1.Vote;
  return proto.cosmos.group.v1beta1.Vote.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.group.v1beta1.Vote} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.group.v1beta1.Vote}
 */
proto.cosmos.group.v1beta1.Vote.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setProposalId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVoter(value);
      break;
    case 3:
      var value = /** @type {!proto.cosmos.group.v1beta1.Choice} */ (reader.readEnum());
      msg.setChoice(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMetadata(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSubmittedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.group.v1beta1.Vote.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cosmos.group.v1beta1.Vote.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.group.v1beta1.Vote} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.group.v1beta1.Vote.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProposalId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getVoter();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChoice();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getMetadata_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getSubmittedAt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 proposal_id = 1;
 * @return {number}
 */
proto.cosmos.group.v1beta1.Vote.prototype.getProposalId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cosmos.group.v1beta1.Vote} returns this
 */
proto.cosmos.group.v1beta1.Vote.prototype.setProposalId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string voter = 2;
 * @return {string}
 */
proto.cosmos.group.v1beta1.Vote.prototype.getVoter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.group.v1beta1.Vote} returns this
 */
proto.cosmos.group.v1beta1.Vote.prototype.setVoter = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Choice choice = 3;
 * @return {!proto.cosmos.group.v1beta1.Choice}
 */
proto.cosmos.group.v1beta1.Vote.prototype.getChoice = function() {
  return /** @type {!proto.cosmos.group.v1beta1.Choice} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.cosmos.group.v1beta1.Choice} value
 * @return {!proto.cosmos.group.v1beta1.Vote} returns this
 */
proto.cosmos.group.v1beta1.Vote.prototype.setChoice = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bytes metadata = 4;
 * @return {!(string|Uint8Array)}
 */
proto.cosmos.group.v1beta1.Vote.prototype.getMetadata = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes metadata = 4;
 * This is a type-conversion wrapper around `getMetadata()`
 * @return {string}
 */
proto.cosmos.group.v1beta1.Vote.prototype.getMetadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMetadata()));
};


/**
 * optional bytes metadata = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMetadata()`
 * @return {!Uint8Array}
 */
proto.cosmos.group.v1beta1.Vote.prototype.getMetadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMetadata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cosmos.group.v1beta1.Vote} returns this
 */
proto.cosmos.group.v1beta1.Vote.prototype.setMetadata = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp submitted_at = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.cosmos.group.v1beta1.Vote.prototype.getSubmittedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.cosmos.group.v1beta1.Vote} returns this
*/
proto.cosmos.group.v1beta1.Vote.prototype.setSubmittedAt = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cosmos.group.v1beta1.Vote} returns this
 */
proto.cosmos.group.v1beta1.Vote.prototype.clearSubmittedAt = function() {
  return this.setSubmittedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cosmos.group.v1beta1.Vote.prototype.hasSubmittedAt = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * @enum {number}
 */
proto.cosmos.group.v1beta1.Choice = {
  CHOICE_UNSPECIFIED: 0,
  CHOICE_NO: 1,
  CHOICE_YES: 2,
  CHOICE_ABSTAIN: 3,
  CHOICE_VETO: 4
};

goog.object.extend(exports, proto.cosmos.group.v1beta1);
